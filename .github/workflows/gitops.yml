name: Fast-API CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  dockerhub_id: fallewi
  dockerhub_repository: fastapi
  dockerhub_latest: latest
  container: webinar
permissions:
  security-events: write
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Test python Code
      run: | 
        pip3 install -r requirements.txt 
        cd app/
        pytest
        
  sast_scan:
    name: Run Bandit Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Bandit
      run: pip install bandit

    - name: Run Bandit Scan
      run: bandit -ll -ii -r . -f json -o bandit-report.json

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      if: always()
      with:
       name: bandit-findings
       path: bandit-report.json

  image_scan:
    name: Build Image and Run Image Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: docker-practice/actions-setup-docker@v1
      with:
       docker_version: '20.10.7'

    - name: Build Docker Image
      run: docker build -f Dockerfile -t myapp:latest .

    - name: Docker Scout Scan
      run: |
        curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
        sh install-scout.sh
        docker scout quickview
        docker scout cves
       
  secure:
    needs: test
    name: Microsoft Security DevOps Analysis
    # MSDO runs on windows-latest.
    # ubuntu-latest also supported
    runs-on: windows-latest
    steps:
      # Checkout your code repository to scan
    - uses: actions/checkout@v3
      # Run analyzers
    - name: Run Microsoft Security DevOps Analysis
      uses: microsoft/security-devops-action@latest
      id: msdo
      with:
        policy: 'GitHub'
      # config: string. Optional. A file path to an MSDO configuration file ('*.gdnconfig').
      # policy: 'GitHub' | 'microsoft' | 'none'. Optional. The name of a well-known Microsoft policy. If no configuration file or list of tools is provided, the policy may instruct MSDO which tools to run. Default: GitHub.
      # categories: string. Optional. A comma-separated list of analyzer categories to run. Values: 'secrets', 'code', 'artifacts', 'IaC', 'containers. Example: 'IaC,secrets'. Defaults to all.
      # languages: string. Optional. A comma-separated list of languages to analyze. Example: 'javascript,typescript'. Defaults to all.
      # tools: string. Optional. A comma-separated list of analyzer tools to run. Values: 'bandit', 'binskim', 'eslint', 'templateanalyzer', 'terrascan', 'trivy'.

      # Upload alerts to the Security tab
    - name: Upload alerts to Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ steps.msdo.outputs.sarifFile }}

      # Upload alerts file as a workflow artifact
    - name: Upload alerts file as a workflow artifact
      uses: actions/upload-artifact@v3
      with:  
        name: alerts
        path: ${{ steps.msdo.outputs.sarifFile }}
        
  #sonarcloud:
    #needs: secure
    #runs-on: ubuntu-latest
    #steps:
    #- uses: actions/checkout@v2
      #with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        #fetch-depth: 0
    #- name: SonarCloud Scan
      #uses: sonarsource/sonarcloud-github-action@master
      #env:
        #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  #snyk:
    #runs-on: ubuntu-latest
    #needs: sonarcloud
    #steps:
      #- uses: actions/checkout@master
      #- name: Run Snyk to check for vulnerabilities
        #uses: snyk/actions/node@master # For node projects, change accordingly
        #env:
          #SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}    
        #with:
          #command: monitor

  #zap_scan:
    #runs-on: ubuntu-latest
    #name: zap
    #needs: snyk
    #steps:
      #- name: Checkout
        #uses: actions/checkout@v2
        #with:
          #ref: master
      #- name: ZAP Scan
        #uses: zaproxy/action-baseline@v0.6.1
        #with:
          #token: ${{ secrets.GITHUB_TOKEN }}
          #docker_name: 'owasp/zap2docker-stable'
          #target: 'http://test.com' # Change URL or IP of your target application
          #rules_file_name: '.zap/rules.tsv'
          #cmd_options: '-a'
          
  build-push-container:
    name: Build, test, scan and push
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: | 
        docker build -t $dockerhub_id/$dockerhub_repository:${GITHUB_SHA} .
        docker tag  $dockerhub_id/$dockerhub_repository:${GITHUB_SHA} $dockerhub_id/$dockerhub_repository:$dockerhub_latest
        docker images
        docker run -d -p 80:80 --name $container $dockerhub_id/$dockerhub_repository:${GITHUB_SHA}
        sleep 10
        curl localhost 
        
    - name: CSA Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'fallewi/fastapi:${{ github.sha }}'
        format: 'table'
        output: 'trivy-results.sarif'
        scan-type: 'config'
        hide-progress: false
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'
      #env:
        #TRIVY_USERNAME: ${{ secrets.REGISTRY_USER  }}
        #TRIVY_PASSWORD: ${{ secrets.REGISTRY_PASSWD  }}

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
    - name: Push the Docker image
      run: | 
        docker login -u ${{ secrets.REGISTRY_USER  }} -p ${{ secrets.REGISTRY_PASSWD  }}
        docker push $dockerhub_id/$dockerhub_repository:${GITHUB_SHA}
        docker push $dockerhub_id/$dockerhub_repository:$dockerhub_latest

  update-push:
    needs: build-push-container
    name: Clone update and Push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup SSH
      uses: MrSquaare/ssh-setup-action@v1
      with:
          host: github.com
          private-key: ${{ secrets.PRIVATE_KEY }}

    - name: Clone repository
      run: |
        rm -Rf *
        git clone git@github.com:fallewi/gitops-fleet-helm.git
        ls
        cd gitops-fleet-helm/
        cat values.yaml
        sed -i "s+tag.*+tag: ${GITHUB_SHA}+g" values.yaml
        cat values.yaml
    - name: Commit and push changes
      run: |
        ls
        cd gitops-fleet-helm
        git config --global user.name "Fall lewis"
        git config --global user.email "fall-lewis.y@datascientest.com"
        git add -A
        git commit -m "mis Ã  jour de l'image avec le tag ${GITHUB_SHA}"
        git push origin master
